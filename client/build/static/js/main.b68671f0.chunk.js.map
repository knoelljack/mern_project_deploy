{"version":3,"sources":["components/Dashboard.jsx","views/Main.jsx","components/Navbar.jsx","views/Details.jsx","views/Search.jsx","components/TickerWidget.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","useState","bitcoin","setBitcoin","eth","setEth","solana","setSolana","doge","setDoge","history","useHistory","currency","coinList","useEffect","axios","get","then","res","console","log","data","catch","err","className","onClick","e","push","base","src","alt","amount","map","coin","index","Main","setCurrency","setCoinList","onChange","target","value","name","id","defaultValue","length","Navbar","to","Details","useParams","setCoin","symbol","market_data","price_usd","toFixed","number","decPlaces","Math","pow","abbrev","i","size","round","abbrNum","marketcap","current_marketcap_usd","marketcap_dominance_percent","rank","volume_turnover_last_24_hours_percent","on_chain_data","active_addresses","addresses_count","hash_rate","blocks_added_last_24_hours","Search","setSearch","submitted","setSubmitted","error","setError","onSubmit","type","TickerWidget","coins","theme","transparent","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b68671f0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './Dashboard.css';\n\n\n\nconst Dashboard = (props) => {\n\n    const [bitcoin, setBitcoin] = useState({});\n    const [eth, setEth] = useState({});\n    const [solana, setSolana] = useState({});\n    const [doge, setDoge] = useState({});\n    const history = useHistory();\n    const { currency, coinList } = props;\n\n\n    useEffect(() => {\n        axios.get(`https://api.coinbase.com/v2/prices/BTC-${currency}/spot`)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n                setBitcoin(res.data.data);\n            })\n            .catch(err => console.log(err))\n    }, [currency])\n\n    useEffect(() => {\n        axios.get(`https://api.coinbase.com/v2/prices/ETH-${currency}/spot`)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n                setEth(res.data.data);\n            })\n            .catch(err => console.log(err))\n    }, [currency])\n\n    useEffect(() => {\n        axios.get(`https://api.coinbase.com/v2/prices/SOL-${currency}/spot`)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n                setSolana(res.data.data);\n            })\n            .catch(err => console.log(err))\n    }, [currency])\n\n    useEffect(() => {\n        axios.get(`https://api.coinbase.com/v2/prices/DOGE-${currency}/spot`)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n                setDoge(res.data.data);\n            })\n            .catch(err => console.log(err))\n    }, [currency])\n\n    \n\n    return (\n        <div className='dash'>\n            <div onClick={e => history.push(`/coin/${bitcoin.base}/${currency}`)} className='coin'>\n                <img className='bitcoinpic' src=\"https://thumbs.gfycat.com/LameMaleBorzoi-max-1mb.gif\" alt=\"Bitcoin\" />\n                <div>{bitcoin.base}</div>\n                <div>{bitcoin.amount} {bitcoin.currency}</div>\n            </div>\n            <div onClick={e => history.push(`/coin/${eth.base}/${currency}`)} className='coin'>\n                <img className='coinpic' src=\"https://uploads.twitchalerts.com/000/059/135/109/ethereum%20spinning.gif\" alt=\"Ethereum\" />\n                <div>{eth.base}</div>\n                <div>{eth.amount} {eth.currency}</div>\n            </div>\n            <div onClick={e => history.push(`/coin/${solana.base}/${currency}`)} className='coin'>\n                <img className='coinpic' src=\"https://jmww.io/static/media/hold-23-sm.9dc472c0.gif\" alt=\"solana\" />\n                <div>{solana.base}</div>\n                <div>{solana.amount} {solana.currency}</div>\n            </div>\n            <div onClick={e => history.push(`/coin/${doge.base}/${currency}`)} className='coin'>\n                <img className='dogeimg' src=\"https://giffiles.alphacoders.com/213/213067.gif\" alt=\"doge\" />\n                <div>{doge.base}</div>\n                <div>{doge.amount} {doge.currency}</div>\n            </div>\n            {\n                coinList.map((coin, index) => {\n                    return (\n                        <div  key={index} onClick={e => history.push(`/coin/${coin.base}/${currency}`)} className='coin'>\n                            <img className='searchcoinpic' src=\"https://i.gifer.com/origin/71/719ea2f44c791fc07e0e811940a0232b_w200.gif\" alt=\"coin\" />\n                            <div>{coin.base}</div>\n                            <div>{coin.amount} {doge.currency}</div>\n                        </div>\n                    )\n                })\n            }\n            <hr />\n            <p>*All Data on Dashboard Accessed Through Coinbase API</p>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React, {useState} from 'react'\nimport Dashboard from '../components/Dashboard'\nimport './Main.css'\n\nconst Main = (props) => {\n\n    const [currency, setCurrency] = useState('USD');\n    const {coinList, setCoinList} = props;\n\n    return (\n        <div>\n            <h1>Dashboard</h1>\n            <hr />\n            <select onChange={ e=> setCurrency(e.target.value)} name=\"currency\" id=\"currency\" defaultValue='USD'>\n                <option value=\"USD\">USD</option>\n                <option value=\"BRL\">BRL</option>\n                <option value=\"CNY\">CNY</option>\n                <option value=\"EUR\">EUR</option>\n                <option value=\"GBP\">GBP</option>\n                <option value=\"INR\">INR</option>\n                <option value=\"JPY\">JPY</option>\n                <option value=\"KRW\">KRW</option>\n                <option value=\"RUB\">RUB</option>\n                <option value=\"XAU\">XAU</option>\n            </select>\n            <Dashboard currency={currency} coinList={coinList}/>\n            {\n                (coinList.length >= 1) ? <button onClick={e=>setCoinList([])}>Clear Added Coins</button> : <></>\n            }\n        </div>\n    )\n}\n\nexport default Main\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nconst Navbar = () => {\n\n\n\n    return (\n        <div className='nav'>\n            <h2 className='logo'>Crypto API Project</h2>\n            <div>\n                <Link className='navLink' to='/'>Home</Link>\n                <Link className='navLink' to='/search'>Search</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Details.css'\n\nconst Details = () => {\n\n    const { id, currency } = useParams();\n    const [coin, setCoin] = useState({});\n\n    // useEffect(() => {\n    //     axios.get(`https://api.coinbase.com/v2/prices/${id}-${currency}/spot`)\n    //         .then(res=>{\n    //             console.log(res);\n    //             console.log(res.data);\n    //             setCoin(res.data.data);\n    //         })\n    //         .catch(err => console.log(err))\n    // }, [id])\n\n    useEffect(() => {\n        axios.get(`https://data.messari.io/api/v1/assets/${id}/metrics`)\n            .then(res => {\n                console.log(res.data.data);\n                setCoin(res.data.data);\n            })\n            .catch(err => console.log(err))\n    }, [id])\n\n    function abbrNum(number, decPlaces) {\n        // 2 decimal places => 100, 3 => 1000, etc\n        decPlaces = Math.pow(10, decPlaces);\n\n        // Enumerate number abbreviations\n        var abbrev = [\"k\", \"m\", \"b\", \"t\"];\n\n        // Go through the array backwards, so we do the largest first\n        for (var i = abbrev.length - 1; i >= 0; i--) {\n\n            // Convert array index to \"1000\", \"1000000\", etc\n            var size = Math.pow(10, (i + 1) * 3);\n\n            // If the number is bigger or equal do the abbreviation\n            if (size <= number) {\n                // Here, we multiply by decPlaces, round, and then divide by decPlaces.\n                // This gives us nice rounding to a particular decimal place.\n                number = Math.round(number * decPlaces / size) / decPlaces;\n\n                // Add the letter for the abbreviation\n                number += abbrev[i];\n\n                // We are done... stop\n                break;\n            }\n        }\n\n        return number;\n    }\n\n    return (\n        <>\n            {\n                (coin.name) ?\n                    <div>\n                        <h1>{coin.name}</h1>\n                        <h2>{coin.symbol}</h2>\n                        <h2>$ {coin.market_data.price_usd.toFixed(2)} USD</h2>\n                        <div className=\"main\">\n                            <div className=\"subsection\">\n                                <h3>Marketcap Info:</h3>\n                                <p>Current Marketcap USD: ${abbrNum(coin.marketcap.current_marketcap_usd,2)}</p>\n                                <p>Market Dominance: {coin.marketcap.marketcap_dominance_percent.toFixed(2)} %</p>\n                                <p>Rank: {coin.marketcap.rank}</p>\n                                <p>Volume Turnover last 24hr: {coin.marketcap.volume_turnover_last_24_hours_percent ? coin.marketcap.volume_turnover_last_24_hours_percent.toFixed(2) : null} %</p>\n                            </div>\n                            <div className=\"subsection\">\n                                <h3>On-chain Data:</h3>\n                                <p>Active Addresses: {coin.on_chain_data.active_addresses}</p>\n                                <p>Total Addresses: {coin.on_chain_data.addresses_count}</p>\n                                <p>Hash Rate: {coin.on_chain_data.hash_rate ? coin.on_chain_data.hash_rate.toFixed(2):null}</p>\n                                <p>Blocks Added Last 24hr: {coin.on_chain_data.blocks_added_last_24_hours}</p>\n                            </div>\n                        </div>\n                        <hr />\n                        <br />\n                        <br />\n                        <p>*All Data on Details Accessed Through Messari API</p>\n                    </div>\n                    : <h1>Loading...</h1>\n            }\n        </>\n    )\n}\n\nexport default Details\n","import React, {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom';\nimport './Search.css';\nimport axios from 'axios';\n\nconst Search = (props) => {\n\n    const [search, setSearch] = useState(\"\");\n    const [coin, setCoin] = useState();\n    const [submitted, setSubmitted] = useState(false);\n    const [error, setError] = useState(\"\");\n    const history = useHistory();\n    const {coinList,setCoinList} = props;\n\n    const submitHandler = e => {\n        console.log('SUBMITTED');\n        setSubmitted(!submitted);\n    }\n    \n    const searchHandler = e => {\n        setSearch(e.target.value);\n        if(e.target.value.length >= 3){\n        axios.get(`https://api.coinbase.com/v2/prices/${e.target.value}-USD/spot`)\n            .then(res => {\n                console.log(res.data);\n                setCoin(res.data.data);\n                setError(\"\");\n            })\n            .catch(err => {\n                console.log(err);\n                setError('INVALID ENTRY');\n            })\n        }\n    }\n\n    // useEffect(() => {\n    //     axios.get(`https://api.coinbase.com/v2/prices/${search}-USD/spot`)\n    //         .then(res => {\n    //             console.log(res.data);\n    //             setCoin(res.data.data);\n    //             setError(\"\");\n    //         })\n    //         .catch(err => {\n    //             console.log(err);\n    //             setError('INVALID ENTRY');\n    //         })\n    // }, [search.length == 3])\n\n\n    return (\n        <div className='search'>\n            <h2>Search for a cryptocurrency</h2>\n            <br />\n            <form onSubmit={submitHandler}>\n                <label>Enter Coin Ticker:</label><br />\n                <input type=\"text\" onChange={searchHandler}/> <br />\n            </form>\n            <h3>{error}</h3>\n            {\n                (coin) ?\n                <div>\n                    <div onClick={e => history.push(`/coin/${coin.base}/${coin.currency}`)} className='coin'>\n                        <img className='searchcoinpic' src=\"https://i.gifer.com/origin/71/719ea2f44c791fc07e0e811940a0232b_w200.gif\" alt=\"User Added Coin\" />\n                        <div>{coin.base}</div>\n                        <div>{coin.amount} {coin.currency}</div>\n                    </div> \n                    <button onClick={e => setCoinList([...coinList, coin])}>Add Coin to List</button>\n                </div>\n                : <div/>\n            }\n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\nimport './TickerWidget.css'\n\nconst TickerWidget = () => {\n    return (\n        <div>\n            <script type=\"text/javascript\" src=\"https://files.coinmarketcap.com/static/widget/coinMarquee.js\"></script><div id=\"coinmarketcap-widget-marquee\" coins=\"1,1027,5426,74\" currency=\"USD\" theme=\"light\" transparent=\"false\" show-symbol-logo=\"true\"></div>\n        </div>\n    )\n}\n\nexport default TickerWidget\n","import './App.css';\nimport React, {useState} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Main from './views/Main';\nimport Navbar from './components/Navbar';\nimport Details from './views/Details';\nimport Search from './views/Search';\nimport TickerWidget from './components/TickerWidget';\n\n\nfunction App() {\n\n    const [coinList, setCoinList] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar/>\n          <Switch>\n            <Route exact path='/'>\n              <Main coinList={coinList} setCoinList={setCoinList}/>\n            </Route>\n            <Route exact path='/coin/:id/:currency'>\n              <Details/>\n            </Route>\n            <Route exact path='/search'>\n              <Search setCoinList={setCoinList} coinList={coinList}/>\n            </Route>\n          </Switch>\n        <TickerWidget/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}